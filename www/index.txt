<HEAD>
    <TITLE> fftMPI Library </TITLE>
    <meta name="Description" content="fftMPI home page">
    <meta name="keywords" content="parallel FFTs, MPI, Fast Fourier Transforms">
    <meta name="google-site-verification" content="jIe-V87O61oNvgWFgBXMeF5bFl35XjSaG0Fm8_7q5VU" />
    <meta name="review" content="09_20_2018" />
    <meta name="filename" content="index.html" />
    <meta name="subject" content="fftMPI home page" />
    <meta name="sandia.approval_type" content="formal" />
    <meta name="sandia.approved" content="2018-11288W" />
    <link rev="owns" title="Steve Plimpton" href="mailto:sjplimp@sandia.gov" />
    <link rev="made, publisher" title="Steve Plimpton" href="mailto:sjplimp@sandia.gov" />
    <meta name="MSSmartTagsPreventParsing" content="TRUE" />
    <meta name="Author" content="Steve Plimpton" />
</HEAD>

fftMPI, a distributed-memory parallel FFT library :c,h3

:line

This is the home page for the fftMPI library.  It performs 2d or 3d
Fast Fourier Transforms (FFTs) in parallel where the FFT grid is
distributed across processors.  

"Documentation"_doc/Manual.html,
"Download"_download,
"Publications"_papers.html,
"Open source"_open_source.html, 
"Library API"_doc/api.html,
"GitHub site"_github,
"Latest features & bug fixes"_bug.html,
. :tb(c=4,ea=c,a=c)

:line

The fftMPI library computes 2d and 3d FFTs in parallel as sets of 1d
FFTs (via an external library) in each dimension of the FFT grid,
interleaved with "MPI communication"_mpi to migrate data between
processors.

Features and limitations of fftMPI: :h4

2d or 3d FFTs
complex-to-complex FFTs
single or double precision
compute FFTs in place, or output to separate memory
runs on any number of processors, including 1 proc
allowed grid size in each dimension = any product of 2,3,5 prime factors
grid decomposition = arbitrary tiling across MPI tasks (explained "here"_Manual.html )
initial/final decompositions of grid can be different (useful for convolutions)
auto-tuning option for a few parameters which affect performance
1d FFTs computed by an external library: "FFTW"_fftw, "MKL"_mkl, or "KISS"_kiss
data movement/reordering methods can be used without FFTs
invoke multiple instances of the library (e.g. with MPI sub-communicators)
callable from C++ or any language via a C interface (e.g. C, Fortran, Python)
test programs and interface files included for all 4 of these languages
CPU only execution, currently no OpenMP or GPU support :ul

:line

The fftMPI library is open-source code, distributed freely under the
terms of the modified "Berkeley Software Distribution (BSD)
License"_bsd.  See "this page"_open_source.html for more details.  It
was developed at "Sandia National Laboratories"_snl, a US "Department
of Energy"_doe facility, for use in coupling scientific applications
running on desktop machines to large supercomputers.  Funding for
fftMPI came from DOE's "Office of Advanced Scientific Computing
Program"_oascr (OASCR) under the auspices of its "Exascale Computing
Program"_ecp (ECP).

:line

The fftMPI library is used in "LAMMPS"_http://lammps.sandia.gov, a
parallel molecular dynamics (MD) code, to perform Poisson solves for
long-range Coulombic interactions via the particle-particle
particle-mesh (PPPM) method.  It is also used in
"SPARTA"_http://sparta.sandia.gov, a parallel Direct Simulation Monte
Carlo (DSMC) code, to perform analyses of turbulent flows.

The fftMPI library replaces the older "Parallel FFT Package"_oldfft,
which was developed around 1997 for LAMMPS.  The older package is also
available from this "download site"_download.

:line

The main author of fftMPI is "Steve Plimpton"_sjp, who can be
contacted at sjplimp at sandia.gov. These collaborators have also
contributed to fftMPI:

Axel Kohlmemer (Temple U): support for FFTW3 and KISS libraries
Phil Blood (PSC): single precision option
Paul Coffman (IBM): optimized MPI collective option :ul

You can "send an email to me"_sjp regarding on any of these topics:

If you use fftMPI for something interesting, let me know. :ulb,l

If you write a paper using fftMPI, Ican post a citation on "this
page"_papers.html :l

If you enhance fftMPI or have ideas for doing so, we can discuss
including your improvements in a future release. :l,ule

:line

Other freely available parallel FFT libraries include:

"PFFT"_PFFT from Michael Pippig (Technische Universitat Chemnitz)
"P3DFFT"_P3DFFT from Dmitry Pekurovsky (UCSD)
"FFTW"_fftw (see "this doc page"_fftwmpi) from Matteo Frigo and Steven G. Johnson (MIT) :ul

:line

The fftMPI website is hosted by Sandia, which has this "Privacy and
Security statement"_security.

:link(fftwiki,https://en.wikipedia.org/wiki/Client%E2%80%93server_model)
:link(github,github.html)
:link(snl,http://www.sandia.gov)
:link(doe,http://www.doe.gov)
:link(oascr,https://science.energy.gov/ascr)
:link(ecp,https://www.exascaleproject.org)
:link(bsd,http://en.wikipedia.org/wiki/BSD_license)
:link(sjp,http://www.sandia.gov/~sjplimp)
:link(security,http://www.sandia.gov/general/privacy-security/index.html)
:link(download,http://www.sandia.gov/~sjplimp/download.html)
:link(mpi,https://en.wikipedia.org/wiki/Message_Passing_Interface)

:link(oldfft,http://www.sandia.gov/~sjplimp/docs/fft/README.html)
:link(PFFT,https://github.com/mpip/pfft)
:link(P3DFFT,https://github.com/sdsc/p3dfft)
:link(fftw,http://www.fftw.org)
:link(fftwmpi,http://www.fftw.org/fftw3_doc/Distributed_002dmemory-FFTW-with-MPI.html#Distributed_002dmemory-FFTW-with-MPI)
:link(kiss,https://sourceforge.net/projects/kissfft)

:line

Recent fftMPI News :c,h4

<IMG SRC = "new.gif"> (10/18) Initial open-source release of fftMPI. :ul
