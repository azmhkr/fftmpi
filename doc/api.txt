"fftMPI documentation"_Manual.html

API overview :h3

The fftMPI library is a collection of 4 classes: FFT3d, FFT2d,
Remap3d, Remap2d.  The 2 FFT classes perform 3d and 2d FFTs.  The 2
Remap classes perform data rearrangments in parallel.  Only call them
if you don't wish to perform FFTs, but just rearrange the data in 3d
or 2d grids.

A calling program can instantiate any of them, as
many times as it wishes.

Idea is instatiate once, setup() once to defines intial/final tiling,
then use multiple times to perform either forward/backward FFTs.

Forward goes from initial tiling -> final.
Backward goes from final tiling -> initial.

If need different pairing of intiial/final tiling, just
instantiate a separate FFT

Single/double has to be chosen at compile time, as explained on build page.

Data for FFT grid is owned by caller, must be contiguous as explained
"here".

These are the methods that can be called for either the FFT3d or FFT2d
classes:

"constructor and destructor"_api_create.html
"set()"_api_set.html
"setup()"_api_setup.html
"setup_memory()"_api_setup_memory.html
"compute()"_api_compute.html
"only_1d_ffts()"_api_only_1d_ffts.html
"only_remaps()"_api_only_remaps.html
"only_one_remap()"_api_only_one_remap.html
"tune()_api_tune.html
"get()"_api_get.html :ul

See the test3d.cpp, test3d_c.cpp, test3d_f90.f90, test3d.py files in
the test dir for examples of how all these methods are called.
Ditto for the test2d.cpp, test2d_c.cpp, test2d_f90.f90, test2d.py files.

These are the methods that can be called for either the Remap3d or
Remap2d classes:

"constructor and destructor"_api_remap_create.html
"set()"_api_remap_set.html
"setup()"_api_remap_setup.html
"remap()"_api_remap_remap.html :ul
